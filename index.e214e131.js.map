{"mappings":"A,I,E,C,E,O,c,C,E,a,C,I,W,O,C,E,I,K,E,W,C,E,a,C,C,GEEO,MAAM,EAAa,EAE1B,SAAS,EAAW,CAAG,EACrB,OAAO,EAAI,MAAM,CAAC,AAAC,GAAQ,AAAQ,IAAR,EAC7B,CAEA,MAAM,EAAgB,MAAM,IAAI,CAAC,CAAE,OANT,CAM4B,EAAG,IAChD,MAAM,GAAY,IAAI,CAAC,GAGhC,OAAM,EACJ,OAAO,OAAS,CACd,KAAM,OACN,QAAS,UACT,IAAK,MACL,KAAM,MACR,CAAE,AAEF,aAAY,EAAe,CAAa,CAAE,CACxC,IAAI,CAAC,KAAK,CAAG,EAAa,GAAG,CAAC,AAAC,GAAQ,IAAI,EAAI,EAC/C,IAAI,CAAC,MAAM,CAAG,EAAK,MAAM,CAAC,IAAI,CAC9B,IAAI,CAAC,YAAY,CAAG,EACpB,IAAI,CAAC,KAAK,CAAG,CACf,CAEA,gBAAiB,CACf,OAAO,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,EAAK,IAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,AAAC,GAAQ,CAAG,CAAC,EAAE,EACrE,CAEA,aAAc,CACZ,OAAO,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,AAAC,GAAQ,EAAI,OAAO,GAC5C,CACA,MAAM,CAAG,CAAE,CACT,IAAM,EAAS,EAAW,GAE1B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAO,MAAM,CAAG,EAAG,IACjC,CAAM,CAAC,EAAE,GAAK,CAAM,CAAC,EAAI,EAAE,GAC7B,CAAM,CAAC,EAAE,EAAI,EACb,EAAO,MAAM,CAAC,EAAI,EAAG,GACrB,IAAI,CAAC,KAAK,EAAI,CAAM,CAAC,EAAE,EAI3B,KAAO,EAAO,MAAM,CAAG,GACrB,EAAO,IAAI,CAAC,GAGd,OAAO,CACT,CAEA,WAAY,CACV,IACI,EAAe,EAAE,CACf,EAAW,EAAE,CAanB,MANU,AALV,CAAA,EAAe,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,AAAC,IAC7B,EAAS,IAAI,CAAC,MAAM,IAAI,CAAC,IAElB,IAAI,CAAC,KAAK,CAAC,IACpB,EACuB,IAAI,CAAC,OAAS,EAAS,IAAI,CAAC,MAGjD,IAAI,CAAC,aAAa,CAAC,GAGd,CACT,CAEA,KAAK,CAAS,CAAE,CACd,GAAI,IAAI,CAAC,MAAM,GAAK,EAAK,MAAM,CAAC,OAAO,EAIvC,OAAQ,GACN,IAAK,aACH,IAAI,CAAC,SAAS,GACd,KACF,KAAK,YACH,IAAI,CAAC,QAAQ,GACb,KACF,KAAK,UACH,IAAI,CAAC,MAAM,GACX,KACF,KAAK,YACH,IAAI,CAAC,QAAQ,GACb,KACF,SACE,MACJ,CAEA,IAAI,CAAC,eAAe,GACtB,CACA,UAAW,CAGT,OAFA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,SAAS,GAEpB,IAAI,CAAC,KAAK,AACnB,CAEA,WAAY,CAKV,OAJA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,WAAW,GAC7B,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,SAAS,GAC3B,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,WAAW,GAEtB,IAAI,CAAC,KAAK,AACnB,CAEA,QAAS,CAKP,OAJA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,cAAc,GAChC,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,SAAS,GAC3B,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,cAAc,GAEzB,IAAI,CAAC,KAAK,AACnB,CAEA,UAAW,CAOT,OANA,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,cAAc,GAChC,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,WAAW,GAC7B,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,SAAS,GAC3B,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,WAAW,GAC7B,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,cAAc,GAEzB,IAAI,CAAC,KAAK,AACnB,CAEA,UAAW,CACT,OAAO,IAAI,CAAC,KAAK,AACnB,CACA,UAAW,CACT,OAAO,IAAI,CAAC,KAAK,AACnB,CACA,WAAY,CACV,OAAO,IAAI,CAAC,MAAM,AACpB,CAEA,OAAQ,CACN,IAAI,CAAC,MAAM,CAAG,EAAK,MAAM,CAAC,OAAO,CACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAE,EACjC,CAEA,SAAU,CACR,IAAI,CAAC,MAAM,CAAG,EAAK,MAAM,CAAC,IAAI,CAC9B,IAAI,CAAC,KAAK,CAAG,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,AAAC,GAAQ,IAAI,EAAI,EACpD,IAAI,CAAC,KAAK,CAAG,CACf,CAEA,iBAAkB,CAChB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,AAAC,IACd,EAAM,QAAQ,CAAC,OACjB,CAAA,IAAI,CAAC,MAAM,CAAG,EAAK,MAAM,CAAC,GAAG,AAAH,CAE9B,GAEK,IAAI,CAAC,eAAe,IAAO,IAAI,CAAC,gBAAgB,IACnD,CAAA,IAAI,CAAC,MAAM,CAAG,EAAK,MAAM,CAAC,IAAI,AAAJ,CAE9B,CAEA,iBAAkB,CAChB,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,AAAC,GAAU,EAAM,IAAI,CAAC,AAAC,GAAW,AAAW,IAAX,GAC3D,CAEA,kBAAmB,CACjB,IAAM,EAAW,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,AAAC,IAC/B,IAAM,EAAS,EAAW,GAE1B,KAAO,EAAO,MAAM,CAAG,GACrB,EAAO,IAAI,CAAC,GAGd,OAAO,CACT,GAEA,IAAK,IAAI,EAAI,EAAG,EAAI,EAAa,EAAG,IAClC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAa,EAAG,IAAK,CACvC,IAAM,EAAM,CAAQ,CAAC,EAAE,CAAC,EAAE,CAE1B,GACE,AAAQ,IAAR,GACC,CAAA,IAAQ,CAAQ,CAAC,EAAI,EAAE,CAAC,EAAE,EAAI,IAAQ,CAAQ,CAAC,EAAE,CAAC,EAAI,EAAC,AAAD,EAEvD,MAAO,CAAA,CAEX,CAGF,MAAO,CAAA,CACT,CAEA,cAAc,CAAK,CAAE,EAAY,CAAC,CAAE,CAClC,IAAM,EAAa,EAAE,CAErB,IAAK,IAAI,EAAI,EAAG,EAAI,EAAW,IAAK,CAClC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAY,IAC9B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAY,IACV,IAAhB,CAAK,CAAC,EAAE,CAAC,EAAE,EACb,EAAW,IAAI,CAAC,CAAC,EAAG,EAAE,EAK5B,GAAI,EAAW,MAAM,CAAG,EAAG,CACzB,GAAM,CAAC,EAAS,EAAQ,CACtB,CAAU,CAAC,KAAK,KAAK,CAAC,KAAK,MAAM,GAAK,EAAW,MAAM,EAAE,AAE3D,CAAA,CAAK,CAAC,EAAQ,CAAC,EAAQ,CAAG,AAAgB,GAAhB,KAAK,MAAM,GAAW,EAAI,CACtD,CACF,CACF,CACF,CD/MA,MAAM,EAAO,GCiNb,CAAA,EAAiB,CAAjB,ED/MM,EAAS,SAAS,aAAa,CAAC,UAEhC,EAAY,SAAS,aAAa,CAAC,eACnC,EAAY,SAAS,aAAa,CAAC,eAEnC,EAAe,SAAS,aAAa,CAAC,kBACtC,EAAc,SAAS,aAAa,CAAC,iBACrC,EAAa,SAAS,aAAa,CAAC,gBAE1C,SAAS,IACP,AAqCF,CAAA,WACE,EAAU,SAAS,CAAG,GAEtB,IAAM,EAAY,EAAK,QAAQ,GAE/B,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,IAAM,EAAK,SAAS,aAAa,CAAC,MAElC,IAAK,IAAI,EAAI,EAAG,EAAI,EAAG,IAAK,CAC1B,IAAM,EAAK,SAAS,aAAa,CAAC,MAC5B,EAAQ,CAAS,CAAC,EAAE,CAAC,EAAE,AAE7B,CAAA,EAAG,WAAW,CAAG,AAAU,IAAV,EAAc,EAAQ,GACvC,EAAG,SAAS,CAAC,GAAG,CAAC,cAEH,IAAV,GACF,EAAG,SAAS,CAAC,GAAG,CAAC,CAAC,YAAY,EAAE,EAAM,CAAC,EAGzC,EAAG,WAAW,CAAC,EACjB,CAEA,EAAU,WAAW,CAAC,EACxB,CACF,CAAA,IAGE,EAAU,WAAW,CAAG,EAAK,QAAQ,GAIjC,EAAK,SAAS,KAAO,EAAK,MAAM,CAAC,GAAG,CACtC,EAAW,SAAS,CAAC,MAAM,CAAC,UACnB,EAAK,SAAS,KAAO,EAAK,MAAM,CAAC,IAAI,EAC9C,EAAY,SAAS,CAAC,MAAM,CAAC,SApEjC,CAEA,EAAO,gBAAgB,CAAC,QAAS,KAC3B,EAAO,SAAS,CAAC,QAAQ,CAAC,UAC5B,EAAK,KAAK,GAEV,EAAO,SAAS,CAAC,MAAM,CAAC,SACxB,EAAO,SAAS,CAAC,GAAG,CAAC,WACrB,EAAO,WAAW,CAAG,UAErB,EAAa,SAAS,CAAC,GAAG,CAAC,UAC3B,EAAY,SAAS,CAAC,GAAG,CAAC,UAC1B,EAAW,SAAS,CAAC,GAAG,CAAC,WAChB,EAAO,SAAS,CAAC,QAAQ,CAAC,aACnC,EAAK,OAAO,GAEZ,EAAO,SAAS,CAAC,MAAM,CAAC,WACxB,EAAO,SAAS,CAAC,GAAG,CAAC,SACrB,EAAO,WAAW,CAAG,QAErB,EAAa,SAAS,CAAC,GAAG,CAAC,UAC3B,EAAY,SAAS,CAAC,GAAG,CAAC,UAC1B,EAAW,SAAS,CAAC,GAAG,CAAC,WAG3B,GACF,GAEA,SAAS,gBAAgB,CAAC,QAAS,AAAC,IAClC,EAAK,IAAI,CAAC,EAAE,GAAG,EAEf,GACF,GAwCA","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js"],"sourcesContent":["\nfunction $parcel$export(e, n, v, s) {\n  Object.defineProperty(e, n, {get: v, set: s, enumerable: true, configurable: true});\n}\n\"use strict\";\nvar $a5fd07fa01589658$exports = {};\n\n$parcel$export($a5fd07fa01589658$exports, \"BOARD_SIZE\", function () { return $a5fd07fa01589658$export$23a7ffc9cfbefc05; });\n\"use strict\";\nconst $a5fd07fa01589658$export$23a7ffc9cfbefc05 = 4;\nfunction $a5fd07fa01589658$var$filterZero(row) {\n    return row.filter((num)=>num !== 0);\n}\nconst $a5fd07fa01589658$var$INITIAL_STATE = Array.from({\n    length: $a5fd07fa01589658$export$23a7ffc9cfbefc05\n}, ()=>{\n    return Array($a5fd07fa01589658$export$23a7ffc9cfbefc05).fill(0);\n});\nclass $a5fd07fa01589658$var$Game {\n    static Status = {\n        idle: \"idle\",\n        playing: \"playing\",\n        win: \"win\",\n        lose: \"lose\"\n    };\n    constructor(initialState = $a5fd07fa01589658$var$INITIAL_STATE){\n        this.state = initialState.map((row)=>[\n                ...row\n            ]);\n        this.status = $a5fd07fa01589658$var$Game.Status.idle;\n        this.initialState = initialState;\n        this.score = 0;\n    }\n    transposeArray() {\n        return this.state[0].map((col, i)=>this.state.map((row)=>row[i]));\n    }\n    mirrorArray() {\n        return this.state.map((row)=>row.reverse());\n    }\n    slide(row) {\n        const updRow = $a5fd07fa01589658$var$filterZero(row);\n        for(let i = 0; i < updRow.length - 1; i++)if (updRow[i] === updRow[i + 1]) {\n            updRow[i] *= 2;\n            updRow.splice(i + 1, 1);\n            this.score += updRow[i];\n        }\n        while(updRow.length < $a5fd07fa01589658$export$23a7ffc9cfbefc05)updRow.push(0);\n        return updRow;\n    }\n    slideLeft() {\n        let changed = false;\n        let updatedCells = [];\n        const oldCells = [];\n        updatedCells = this.state.map((row)=>{\n            oldCells.push(Array.from(row));\n            return this.slide(row);\n        });\n        changed = updatedCells.join(\",\") !== oldCells.join(\",\");\n        if (changed) this.getRandomCell(updatedCells);\n        return updatedCells;\n    }\n    move(direction) {\n        if (this.status !== $a5fd07fa01589658$var$Game.Status.playing) return;\n        switch(direction){\n            case \"ArrowRight\":\n                this.moveRight();\n                break;\n            case \"ArrowLeft\":\n                this.moveLeft();\n                break;\n            case \"ArrowUp\":\n                this.moveUp();\n                break;\n            case \"ArrowDown\":\n                this.moveDown();\n                break;\n            default:\n                return;\n        }\n        this.checkGameStatus();\n    }\n    moveLeft() {\n        this.state = this.slideLeft();\n        return this.state;\n    }\n    moveRight() {\n        this.state = this.mirrorArray();\n        this.state = this.slideLeft();\n        this.state = this.mirrorArray();\n        return this.state;\n    }\n    moveUp() {\n        this.state = this.transposeArray();\n        this.state = this.slideLeft();\n        this.state = this.transposeArray();\n        return this.state;\n    }\n    moveDown() {\n        this.state = this.transposeArray();\n        this.state = this.mirrorArray();\n        this.state = this.slideLeft();\n        this.state = this.mirrorArray();\n        this.state = this.transposeArray();\n        return this.state;\n    }\n    getScore() {\n        return this.score;\n    }\n    getState() {\n        return this.state;\n    }\n    getStatus() {\n        return this.status;\n    }\n    start() {\n        this.status = $a5fd07fa01589658$var$Game.Status.playing;\n        this.getRandomCell(this.state, 2);\n    }\n    restart() {\n        this.status = $a5fd07fa01589658$var$Game.Status.idle;\n        this.state = this.initialState.map((row)=>[\n                ...row\n            ]);\n        this.score = 0;\n    }\n    checkGameStatus() {\n        this.state.forEach((group)=>{\n            if (group.includes(2048)) this.status = $a5fd07fa01589658$var$Game.Status.win;\n        });\n        if (!this.checkEmptyCells() && !this.checkIsMergeable()) this.status = $a5fd07fa01589658$var$Game.Status.lose;\n    }\n    checkEmptyCells() {\n        return this.state.some((group)=>group.some((number)=>number === 0));\n    }\n    checkIsMergeable() {\n        const tmpArray = this.state.map((row)=>{\n            const tmpRow = $a5fd07fa01589658$var$filterZero(row);\n            while(tmpRow.length < $a5fd07fa01589658$export$23a7ffc9cfbefc05)tmpRow.push(0);\n            return tmpRow;\n        });\n        for(let r = 0; r < $a5fd07fa01589658$export$23a7ffc9cfbefc05 - 1; r++)for(let c = 0; c < $a5fd07fa01589658$export$23a7ffc9cfbefc05 - 1; c++){\n            const elm = tmpArray[r][c];\n            if (elm !== 0 && (elm === tmpArray[r + 1][c] || elm === tmpArray[r][c + 1])) return true;\n        }\n        return false;\n    }\n    getRandomCell(array, cellCount = 1) {\n        const emptyCells = [];\n        for(let i = 0; i < cellCount; i++){\n            for(let r = 0; r < $a5fd07fa01589658$export$23a7ffc9cfbefc05; r++){\n                for(let c = 0; c < $a5fd07fa01589658$export$23a7ffc9cfbefc05; c++)if (array[r][c] === 0) emptyCells.push([\n                    r,\n                    c\n                ]);\n            }\n            if (emptyCells.length > 0) {\n                const [randomR, randomC] = emptyCells[Math.floor(Math.random() * emptyCells.length)];\n                array[randomR][randomC] = Math.random() < 0.9 ? 2 : 4;\n            }\n        }\n    }\n}\n$a5fd07fa01589658$exports = $a5fd07fa01589658$var$Game;\n\n\nconst $09e991522ca7e64e$var$game = new $a5fd07fa01589658$exports();\nconst $09e991522ca7e64e$var$button = document.querySelector(\".start\");\nconst $09e991522ca7e64e$var$gameField = document.querySelector(\".game-field\");\nconst $09e991522ca7e64e$var$gameScore = document.querySelector(\".game-score\");\nconst $09e991522ca7e64e$var$messageStart = document.querySelector(\".message-start\");\nconst $09e991522ca7e64e$var$messageLose = document.querySelector(\".message-lose\");\nconst $09e991522ca7e64e$var$messageWin = document.querySelector(\".message-win\");\nfunction $09e991522ca7e64e$var$manageGame() {\n    $09e991522ca7e64e$var$manageGameField();\n    $09e991522ca7e64e$var$manageGameScore();\n    $09e991522ca7e64e$var$manageMessages();\n}\n$09e991522ca7e64e$var$button.addEventListener(\"click\", ()=>{\n    if ($09e991522ca7e64e$var$button.classList.contains(\"start\")) {\n        $09e991522ca7e64e$var$game.start();\n        $09e991522ca7e64e$var$button.classList.remove(\"start\");\n        $09e991522ca7e64e$var$button.classList.add(\"restart\");\n        $09e991522ca7e64e$var$button.textContent = \"Restart\";\n        $09e991522ca7e64e$var$messageStart.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$messageLose.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$messageWin.classList.add(\"hidden\");\n    } else if ($09e991522ca7e64e$var$button.classList.contains(\"restart\")) {\n        $09e991522ca7e64e$var$game.restart();\n        $09e991522ca7e64e$var$button.classList.remove(\"restart\");\n        $09e991522ca7e64e$var$button.classList.add(\"start\");\n        $09e991522ca7e64e$var$button.textContent = \"Start\";\n        $09e991522ca7e64e$var$messageStart.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$messageLose.classList.add(\"hidden\");\n        $09e991522ca7e64e$var$messageWin.classList.add(\"hidden\");\n    }\n    $09e991522ca7e64e$var$manageGame();\n});\ndocument.addEventListener(\"keyup\", (e)=>{\n    $09e991522ca7e64e$var$game.move(e.key);\n    $09e991522ca7e64e$var$manageGame();\n});\nfunction $09e991522ca7e64e$var$manageGameField() {\n    $09e991522ca7e64e$var$gameField.innerHTML = \"\";\n    const currState = $09e991522ca7e64e$var$game.getState();\n    for(let r = 0; r < 4; r++){\n        const tr = document.createElement(\"tr\");\n        for(let c = 0; c < 4; c++){\n            const td = document.createElement(\"td\");\n            const value = currState[r][c];\n            td.textContent = value !== 0 ? value : \"\";\n            td.classList.add(\"field-cell\");\n            if (value !== 0) td.classList.add(`field-cell--${value}`);\n            tr.appendChild(td);\n        }\n        $09e991522ca7e64e$var$gameField.appendChild(tr);\n    }\n}\nfunction $09e991522ca7e64e$var$manageGameScore() {\n    $09e991522ca7e64e$var$gameScore.textContent = $09e991522ca7e64e$var$game.getScore();\n}\nfunction $09e991522ca7e64e$var$manageMessages() {\n    if ($09e991522ca7e64e$var$game.getStatus() === $a5fd07fa01589658$exports.Status.win) $09e991522ca7e64e$var$messageWin.classList.remove(\"hidden\");\n    else if ($09e991522ca7e64e$var$game.getStatus() === $a5fd07fa01589658$exports.Status.lose) $09e991522ca7e64e$var$messageLose.classList.remove(\"hidden\");\n}\n$09e991522ca7e64e$var$manageGame();\n\n\n//# sourceMappingURL=index.e214e131.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\n\nconst game = new Game();\n\nconst button = document.querySelector('.start');\n\nconst gameField = document.querySelector('.game-field');\nconst gameScore = document.querySelector('.game-score');\n\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\nfunction manageGame() {\n  manageGameField();\n  manageGameScore();\n  manageMessages();\n}\n\nbutton.addEventListener('click', () => {\n  if (button.classList.contains('start')) {\n    game.start();\n\n    button.classList.remove('start');\n    button.classList.add('restart');\n    button.textContent = 'Restart';\n\n    messageStart.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n  } else if (button.classList.contains('restart')) {\n    game.restart();\n\n    button.classList.remove('restart');\n    button.classList.add('start');\n    button.textContent = 'Start';\n\n    messageStart.classList.add('hidden');\n    messageLose.classList.add('hidden');\n    messageWin.classList.add('hidden');\n  }\n\n  manageGame();\n});\n\ndocument.addEventListener('keyup', (e) => {\n  game.move(e.key);\n\n  manageGame();\n});\n\nfunction manageGameField() {\n  gameField.innerHTML = '';\n\n  const currState = game.getState();\n\n  for (let r = 0; r < 4; r++) {\n    const tr = document.createElement('tr');\n\n    for (let c = 0; c < 4; c++) {\n      const td = document.createElement('td');\n      const value = currState[r][c];\n\n      td.textContent = value !== 0 ? value : '';\n      td.classList.add('field-cell');\n\n      if (value !== 0) {\n        td.classList.add(`field-cell--${value}`);\n      }\n\n      tr.appendChild(td);\n    }\n\n    gameField.appendChild(tr);\n  }\n}\n\nfunction manageGameScore() {\n  gameScore.textContent = game.getScore();\n}\n\nfunction manageMessages() {\n  if (game.getStatus() === Game.Status.win) {\n    messageWin.classList.remove('hidden');\n  } else if (game.getStatus() === Game.Status.lose) {\n    messageLose.classList.remove('hidden');\n  }\n}\n\nmanageGame();\n","'use strict';\n\nexport const BOARD_SIZE = 4;\n\nfunction filterZero(row) {\n  return row.filter((num) => num !== 0);\n}\n\nconst INITIAL_STATE = Array.from({ length: BOARD_SIZE }, () => {\n  return Array(BOARD_SIZE).fill(0);\n});\n\nclass Game {\n  static Status = {\n    idle: 'idle',\n    playing: 'playing',\n    win: 'win',\n    lose: 'lose',\n  };\n\n  constructor(initialState = INITIAL_STATE) {\n    this.state = initialState.map((row) => [...row]);\n    this.status = Game.Status.idle;\n    this.initialState = initialState;\n    this.score = 0;\n  }\n\n  transposeArray() {\n    return this.state[0].map((col, i) => this.state.map((row) => row[i]));\n  }\n\n  mirrorArray() {\n    return this.state.map((row) => row.reverse());\n  }\n  slide(row) {\n    const updRow = filterZero(row);\n\n    for (let i = 0; i < updRow.length - 1; i++) {\n      if (updRow[i] === updRow[i + 1]) {\n        updRow[i] *= 2;\n        updRow.splice(i + 1, 1);\n        this.score += updRow[i];\n      }\n    }\n\n    while (updRow.length < BOARD_SIZE) {\n      updRow.push(0);\n    }\n\n    return updRow;\n  }\n\n  slideLeft() {\n    let changed = false;\n    let updatedCells = [];\n    const oldCells = [];\n\n    updatedCells = this.state.map((row) => {\n      oldCells.push(Array.from(row));\n\n      return this.slide(row);\n    });\n    changed = updatedCells.join(',') !== oldCells.join(',');\n\n    if (changed) {\n      this.getRandomCell(updatedCells);\n    }\n\n    return updatedCells;\n  }\n\n  move(direction) {\n    if (this.status !== Game.Status.playing) {\n      return;\n    }\n\n    switch (direction) {\n      case 'ArrowRight':\n        this.moveRight();\n        break;\n      case 'ArrowLeft':\n        this.moveLeft();\n        break;\n      case 'ArrowUp':\n        this.moveUp();\n        break;\n      case 'ArrowDown':\n        this.moveDown();\n        break;\n      default:\n        return;\n    }\n\n    this.checkGameStatus();\n  }\n  moveLeft() {\n    this.state = this.slideLeft();\n\n    return this.state;\n  }\n\n  moveRight() {\n    this.state = this.mirrorArray();\n    this.state = this.slideLeft();\n    this.state = this.mirrorArray();\n\n    return this.state;\n  }\n\n  moveUp() {\n    this.state = this.transposeArray();\n    this.state = this.slideLeft();\n    this.state = this.transposeArray();\n\n    return this.state;\n  }\n\n  moveDown() {\n    this.state = this.transposeArray();\n    this.state = this.mirrorArray();\n    this.state = this.slideLeft();\n    this.state = this.mirrorArray();\n    this.state = this.transposeArray();\n\n    return this.state;\n  }\n\n  getScore() {\n    return this.score;\n  }\n  getState() {\n    return this.state;\n  }\n  getStatus() {\n    return this.status;\n  }\n\n  start() {\n    this.status = Game.Status.playing;\n    this.getRandomCell(this.state, 2);\n  }\n\n  restart() {\n    this.status = Game.Status.idle;\n    this.state = this.initialState.map((row) => [...row]);\n    this.score = 0;\n  }\n\n  checkGameStatus() {\n    this.state.forEach((group) => {\n      if (group.includes(2048)) {\n        this.status = Game.Status.win;\n      }\n    });\n\n    if (!this.checkEmptyCells() && !this.checkIsMergeable()) {\n      this.status = Game.Status.lose;\n    }\n  }\n\n  checkEmptyCells() {\n    return this.state.some((group) => group.some((number) => number === 0));\n  }\n\n  checkIsMergeable() {\n    const tmpArray = this.state.map((row) => {\n      const tmpRow = filterZero(row);\n\n      while (tmpRow.length < BOARD_SIZE) {\n        tmpRow.push(0);\n      }\n\n      return tmpRow;\n    });\n\n    for (let r = 0; r < BOARD_SIZE - 1; r++) {\n      for (let c = 0; c < BOARD_SIZE - 1; c++) {\n        const elm = tmpArray[r][c];\n\n        if (\n          elm !== 0 &&\n          (elm === tmpArray[r + 1][c] || elm === tmpArray[r][c + 1])\n        ) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  getRandomCell(array, cellCount = 1) {\n    const emptyCells = [];\n\n    for (let i = 0; i < cellCount; i++) {\n      for (let r = 0; r < BOARD_SIZE; r++) {\n        for (let c = 0; c < BOARD_SIZE; c++) {\n          if (array[r][c] === 0) {\n            emptyCells.push([r, c]);\n          }\n        }\n      }\n\n      if (emptyCells.length > 0) {\n        const [randomR, randomC] =\n          emptyCells[Math.floor(Math.random() * emptyCells.length)];\n\n        array[randomR][randomC] = Math.random() < 0.9 ? 2 : 4;\n      }\n    }\n  }\n}\n\nmodule.exports = Game;\n"],"names":["$a5fd07fa01589658$exports","Object","defineProperty","get","$a5fd07fa01589658$export$23a7ffc9cfbefc05","set","s","enumerable","configurable","$a5fd07fa01589658$var$filterZero","row","filter","num","$a5fd07fa01589658$var$INITIAL_STATE","Array","from","length","fill","$a5fd07fa01589658$var$Game","Status","idle","playing","win","lose","constructor","initialState","state","map","status","score","transposeArray","col","i","mirrorArray","reverse","slide","updRow","splice","push","slideLeft","updatedCells","oldCells","join","getRandomCell","move","direction","moveRight","moveLeft","moveUp","moveDown","checkGameStatus","getScore","getState","getStatus","start","restart","forEach","group","includes","checkEmptyCells","checkIsMergeable","some","number","tmpArray","tmpRow","r","c","elm","array","cellCount","emptyCells","randomR","randomC","Math","floor","random","$09e991522ca7e64e$var$game","$09e991522ca7e64e$var$button","document","querySelector","$09e991522ca7e64e$var$gameField","$09e991522ca7e64e$var$gameScore","$09e991522ca7e64e$var$messageStart","$09e991522ca7e64e$var$messageLose","$09e991522ca7e64e$var$messageWin","$09e991522ca7e64e$var$manageGame","$09e991522ca7e64e$var$manageGameField","innerHTML","currState","tr","createElement","td","value","textContent","classList","add","appendChild","remove","addEventListener","contains","e","key"],"version":3,"file":"index.e214e131.js.map"}